---
import type { GetStaticPaths } from "astro";
import type { PokemonListResponse } from "@interfaces/pokemon-list.response";

import MainLayout from "@layouts/MainLayout.astro";
import PokemonCard from "@components/pokemons/PokemonCard.astro";
import Title from "@components/shared/Title.astro";
import { Icon } from "astro-icon/components";

export const getStaticPaths = ( async () => {
  const res = await fetch('https://pokeapi.co/api/v2/pokemon?limit=151');

  const { results } = await res.json() as PokemonListResponse;
  
  return results.map( result => ({
    params: { name: result.name },
    props: { url: result.url }
  }))


}) satisfies GetStaticPaths;

const { name } = Astro.params;
const { url } = Astro.props;
const id = url.split('/').at(-2);
const audioSrc = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${id}.ogg`
const imageSrc = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`
---

<MainLayout 
  title={`Pokémon - #${id} ${name}`}
  description={`Informacion sobre el pokémon ${name}`}
  image={ imageSrc }
>
  
  <button onclick="history.back()" class="hover:text-blue-700 text-sm text-blue-500 capitalize">regresar</button>
  <section class="mt-10 mx-10 flex flex-col justify-center items-center">
    <div class="flex flex-row">
      <Title>
        { name }
      </Title>
      <button class="ml-2 hover:animate-pulse" data-name={name} data-id={id}>
        <Icon name="heart-outline" size={50}/>
        <Icon class="hidden" name="heart-full" size={50}/>
      </button>
    </div>
    <PokemonCard name={name} url={url} isDetail/>

    <audio controls class="mt-5">
      <source src={audioSrc} type="audio/ogg" />
    </audio>
  </section>
</MainLayout>

<script>
  interface FavoritePokemon {
    name: string,
    id: number,
  }

</script>